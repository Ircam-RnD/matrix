{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "Literal",
        "value": "use strict",
        "raw": "'use strict'",
        "range": [
          0,
          12
        ],
        "loc": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 12
          }
        }
      },
      "range": [
        0,
        13
      ],
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 13
        }
      }
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "EventEmitter",
            "range": [
              21,
              33
            ],
            "loc": {
              "start": {
                "line": 3,
                "column": 6
              },
              "end": {
                "line": 3,
                "column": 18
              }
            }
          },
          "init": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "require",
                "range": [
                  36,
                  43
                ],
                "loc": {
                  "start": {
                    "line": 3,
                    "column": 21
                  },
                  "end": {
                    "line": 3,
                    "column": 28
                  }
                }
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "events",
                  "raw": "'events'",
                  "range": [
                    44,
                    52
                  ],
                  "loc": {
                    "start": {
                      "line": 3,
                      "column": 29
                    },
                    "end": {
                      "line": 3,
                      "column": 37
                    }
                  }
                }
              ],
              "range": [
                36,
                53
              ],
              "loc": {
                "start": {
                  "line": 3,
                  "column": 21
                },
                "end": {
                  "line": 3,
                  "column": 38
                }
              }
            },
            "property": {
              "type": "Identifier",
              "name": "EventEmitter",
              "range": [
                54,
                66
              ],
              "loc": {
                "start": {
                  "line": 3,
                  "column": 39
                },
                "end": {
                  "line": 3,
                  "column": 51
                }
              }
            },
            "range": [
              36,
              66
            ],
            "loc": {
              "start": {
                "line": 3,
                "column": 21
              },
              "end": {
                "line": 3,
                "column": 51
              }
            }
          },
          "range": [
            21,
            66
          ],
          "loc": {
            "start": {
              "line": 3,
              "column": 6
            },
            "end": {
              "line": 3,
              "column": 51
            }
          }
        }
      ],
      "kind": "const",
      "range": [
        15,
        67
      ],
      "loc": {
        "start": {
          "line": 3,
          "column": 0
        },
        "end": {
          "line": 3,
          "column": 52
        }
      },
      "trailingComments": [
        {
          "type": "Line",
          "value": " TODO: remove EventEmitter? (Implement our own listeners)",
          "range": [
            68,
            127
          ],
          "loc": {
            "start": {
              "line": 3,
              "column": 53
            },
            "end": {
              "line": 3,
              "column": 112
            }
          }
        },
        {
          "type": "Block",
          "value": "*\n * The {@link ServerModule} base class is used to create a *Soundworks* module on the server side.\n * Each module should have a {@link ServerModule#connect} and a {@link ServerModule#disconnect} method.\n * Any module mapped to the type of client `clientType` (thanks to the {@link server#map} method) would call its {@link ServerModule#connect} method when such a client connects to the server, and its {@link ServerModule#disconnect} method when such a client disconnects from the server.\n * @example\n * class MyModule extends serverSide.Module {\n *   constructor('my-module-name') {\n *     ... // anything the constructor needs\n *   }\n *\n *   connect(client) {\n *     ... // what the module has to do when a client connects to the server\n *   }\n *\n *   disconnect(client) {\n *     ... // what the module has to do when a client disconnects from the server\n *   }\n * }\n ",
          "range": [
            129,
            1006
          ],
          "loc": {
            "start": {
              "line": 5,
              "column": 0
            },
            "end": {
              "line": 23,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ClassDeclaration",
      "id": {
        "type": "Identifier",
        "name": "ServerModule",
        "range": [
          1013,
          1025
        ],
        "loc": {
          "start": {
            "line": 24,
            "column": 6
          },
          "end": {
            "line": 24,
            "column": 18
          }
        }
      },
      "superClass": {
        "type": "Identifier",
        "name": "EventEmitter",
        "range": [
          1034,
          1046
        ],
        "loc": {
          "start": {
            "line": 24,
            "column": 27
          },
          "end": {
            "line": 24,
            "column": 39
          }
        }
      },
      "body": {
        "type": "ClassBody",
        "body": [
          {
            "type": "MethodDefinition",
            "key": {
              "type": "Identifier",
              "name": "constructor",
              "range": [
                1282,
                1293
              ],
              "loc": {
                "start": {
                  "line": 31,
                  "column": 2
                },
                "end": {
                  "line": 31,
                  "column": 13
                }
              }
            },
            "value": {
              "type": "FunctionExpression",
              "id": null,
              "params": [
                {
                  "type": "Identifier",
                  "name": "name",
                  "range": [
                    1294,
                    1298
                  ],
                  "loc": {
                    "start": {
                      "line": 31,
                      "column": 14
                    },
                    "end": {
                      "line": 31,
                      "column": 18
                    }
                  }
                }
              ],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Super",
                        "range": [
                          1306,
                          1311
                        ],
                        "loc": {
                          "start": {
                            "line": 32,
                            "column": 4
                          },
                          "end": {
                            "line": 32,
                            "column": 9
                          }
                        }
                      },
                      "arguments": [],
                      "range": [
                        1306,
                        1313
                      ],
                      "loc": {
                        "start": {
                          "line": 32,
                          "column": 4
                        },
                        "end": {
                          "line": 32,
                          "column": 11
                        }
                      }
                    },
                    "range": [
                      1306,
                      1314
                    ],
                    "loc": {
                      "start": {
                        "line": 32,
                        "column": 4
                      },
                      "end": {
                        "line": 32,
                        "column": 12
                      }
                    },
                    "trailingComments": [
                      {
                        "type": "Block",
                        "value": "*\n     * The name of the module.\n     * @type {string}\n     ",
                        "range": [
                          1320,
                          1384
                        ],
                        "loc": {
                          "start": {
                            "line": 34,
                            "column": 4
                          },
                          "end": {
                            "line": 37,
                            "column": 7
                          }
                        }
                      }
                    ]
                  },
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "AssignmentExpression",
                      "operator": "=",
                      "left": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "ThisExpression",
                          "range": [
                            1389,
                            1393
                          ],
                          "loc": {
                            "start": {
                              "line": 38,
                              "column": 4
                            },
                            "end": {
                              "line": 38,
                              "column": 8
                            }
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "name",
                          "range": [
                            1394,
                            1398
                          ],
                          "loc": {
                            "start": {
                              "line": 38,
                              "column": 9
                            },
                            "end": {
                              "line": 38,
                              "column": 13
                            }
                          }
                        },
                        "range": [
                          1389,
                          1398
                        ],
                        "loc": {
                          "start": {
                            "line": 38,
                            "column": 4
                          },
                          "end": {
                            "line": 38,
                            "column": 13
                          }
                        }
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "name",
                        "range": [
                          1401,
                          1405
                        ],
                        "loc": {
                          "start": {
                            "line": 38,
                            "column": 16
                          },
                          "end": {
                            "line": 38,
                            "column": 20
                          }
                        }
                      },
                      "range": [
                        1389,
                        1405
                      ],
                      "loc": {
                        "start": {
                          "line": 38,
                          "column": 4
                        },
                        "end": {
                          "line": 38,
                          "column": 20
                        }
                      }
                    },
                    "range": [
                      1389,
                      1406
                    ],
                    "loc": {
                      "start": {
                        "line": 38,
                        "column": 4
                      },
                      "end": {
                        "line": 38,
                        "column": 21
                      }
                    },
                    "leadingComments": [
                      {
                        "type": "Block",
                        "value": "*\n     * The name of the module.\n     * @type {string}\n     ",
                        "range": [
                          1320,
                          1384
                        ],
                        "loc": {
                          "start": {
                            "line": 34,
                            "column": 4
                          },
                          "end": {
                            "line": 37,
                            "column": 7
                          }
                        }
                      }
                    ]
                  }
                ],
                "range": [
                  1300,
                  1410
                ],
                "loc": {
                  "start": {
                    "line": 31,
                    "column": 20
                  },
                  "end": {
                    "line": 39,
                    "column": 3
                  }
                }
              },
              "generator": false,
              "expression": false,
              "range": [
                1293,
                1410
              ],
              "loc": {
                "start": {
                  "line": 31,
                  "column": 13
                },
                "end": {
                  "line": 39,
                  "column": 3
                }
              }
            },
            "kind": "constructor",
            "computed": false,
            "range": [
              1282,
              1410
            ],
            "loc": {
              "start": {
                "line": 31,
                "column": 2
              },
              "end": {
                "line": 39,
                "column": 3
              }
            },
            "leadingComments": [
              {
                "type": "Line",
                "value": " export default class ServerModule extends EventEmitter {",
                "range": [
                  1049,
                  1108
                ],
                "loc": {
                  "start": {
                    "line": 25,
                    "column": 0
                  },
                  "end": {
                    "line": 25,
                    "column": 59
                  }
                }
              },
              {
                "type": "Block",
                "value": "*\n    * Creates an instance of the class.\n    * @param {Object} [options={}] The options.\n    * @param {string} [options.name='unnamed'] The name of the module.\n   ",
                "range": [
                  1111,
                  1279
                ],
                "loc": {
                  "start": {
                    "line": 26,
                    "column": 2
                  },
                  "end": {
                    "line": 30,
                    "column": 5
                  }
                }
              }
            ],
            "trailingComments": [
              {
                "type": "Block",
                "value": "*\n   * Called when the `client` connects to the server.\n   * This method should handle the logic of the module on the server side. For instance, it can take care of the communication with the client side module by setting up WebSocket message listeners and sending WebSocket messages, or it can add the client to a list to keep track of all the connected clients.\n   * @param {ServerClient} client The connected client.\n   ",
                "range": [
                  1414,
                  1841
                ],
                "loc": {
                  "start": {
                    "line": 41,
                    "column": 2
                  },
                  "end": {
                    "line": 45,
                    "column": 5
                  }
                }
              }
            ],
            "static": false
          },
          {
            "type": "MethodDefinition",
            "key": {
              "type": "Identifier",
              "name": "connect",
              "range": [
                1844,
                1851
              ],
              "loc": {
                "start": {
                  "line": 46,
                  "column": 2
                },
                "end": {
                  "line": 46,
                  "column": 9
                }
              }
            },
            "value": {
              "type": "FunctionExpression",
              "id": null,
              "params": [
                {
                  "type": "Identifier",
                  "name": "client",
                  "range": [
                    1852,
                    1858
                  ],
                  "loc": {
                    "start": {
                      "line": 46,
                      "column": 10
                    },
                    "end": {
                      "line": 46,
                      "column": 16
                    }
                  }
                }
              ],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "AssignmentExpression",
                      "operator": "=",
                      "left": {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "client",
                            "range": [
                              1889,
                              1895
                            ],
                            "loc": {
                              "start": {
                                "line": 48,
                                "column": 4
                              },
                              "end": {
                                "line": 48,
                                "column": 10
                              }
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "modules",
                            "range": [
                              1896,
                              1903
                            ],
                            "loc": {
                              "start": {
                                "line": 48,
                                "column": 11
                              },
                              "end": {
                                "line": 48,
                                "column": 18
                              }
                            }
                          },
                          "range": [
                            1889,
                            1903
                          ],
                          "loc": {
                            "start": {
                              "line": 48,
                              "column": 4
                            },
                            "end": {
                              "line": 48,
                              "column": 18
                            }
                          }
                        },
                        "property": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "ThisExpression",
                            "range": [
                              1904,
                              1908
                            ],
                            "loc": {
                              "start": {
                                "line": 48,
                                "column": 19
                              },
                              "end": {
                                "line": 48,
                                "column": 23
                              }
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "name",
                            "range": [
                              1909,
                              1913
                            ],
                            "loc": {
                              "start": {
                                "line": 48,
                                "column": 24
                              },
                              "end": {
                                "line": 48,
                                "column": 28
                              }
                            }
                          },
                          "range": [
                            1904,
                            1913
                          ],
                          "loc": {
                            "start": {
                              "line": 48,
                              "column": 19
                            },
                            "end": {
                              "line": 48,
                              "column": 28
                            }
                          }
                        },
                        "range": [
                          1889,
                          1914
                        ],
                        "loc": {
                          "start": {
                            "line": 48,
                            "column": 4
                          },
                          "end": {
                            "line": 48,
                            "column": 29
                          }
                        }
                      },
                      "right": {
                        "type": "ObjectExpression",
                        "properties": [],
                        "range": [
                          1917,
                          1919
                        ],
                        "loc": {
                          "start": {
                            "line": 48,
                            "column": 32
                          },
                          "end": {
                            "line": 48,
                            "column": 34
                          }
                        }
                      },
                      "range": [
                        1889,
                        1919
                      ],
                      "loc": {
                        "start": {
                          "line": 48,
                          "column": 4
                        },
                        "end": {
                          "line": 48,
                          "column": 34
                        }
                      }
                    },
                    "range": [
                      1889,
                      1920
                    ],
                    "loc": {
                      "start": {
                        "line": 48,
                        "column": 4
                      },
                      "end": {
                        "line": 48,
                        "column": 35
                      }
                    },
                    "leadingComments": [
                      {
                        "type": "Line",
                        "value": " Setup an object",
                        "range": [
                          1866,
                          1884
                        ],
                        "loc": {
                          "start": {
                            "line": 47,
                            "column": 4
                          },
                          "end": {
                            "line": 47,
                            "column": 22
                          }
                        }
                      }
                    ]
                  }
                ],
                "range": [
                  1860,
                  1924
                ],
                "loc": {
                  "start": {
                    "line": 46,
                    "column": 18
                  },
                  "end": {
                    "line": 49,
                    "column": 3
                  }
                }
              },
              "generator": false,
              "expression": false,
              "range": [
                1851,
                1924
              ],
              "loc": {
                "start": {
                  "line": 46,
                  "column": 9
                },
                "end": {
                  "line": 49,
                  "column": 3
                }
              }
            },
            "kind": "method",
            "computed": false,
            "range": [
              1844,
              1924
            ],
            "loc": {
              "start": {
                "line": 46,
                "column": 2
              },
              "end": {
                "line": 49,
                "column": 3
              }
            },
            "leadingComments": [
              {
                "type": "Block",
                "value": "*\n   * Called when the `client` connects to the server.\n   * This method should handle the logic of the module on the server side. For instance, it can take care of the communication with the client side module by setting up WebSocket message listeners and sending WebSocket messages, or it can add the client to a list to keep track of all the connected clients.\n   * @param {ServerClient} client The connected client.\n   ",
                "range": [
                  1414,
                  1841
                ],
                "loc": {
                  "start": {
                    "line": 41,
                    "column": 2
                  },
                  "end": {
                    "line": 45,
                    "column": 5
                  }
                }
              }
            ],
            "trailingComments": [
              {
                "type": "Block",
                "value": "*\n   * Called when the client `client` disconnects from the server.\n   * This method should handle the logic when that happens. For instance, it can remove the socket message listeners, or remove the client from the list that keeps track of the connected clients.\n   * @param {ServerClient} client The disconnected client.\n   ",
                "range": [
                  1928,
                  2258
                ],
                "loc": {
                  "start": {
                    "line": 51,
                    "column": 2
                  },
                  "end": {
                    "line": 55,
                    "column": 5
                  }
                }
              }
            ],
            "static": false
          },
          {
            "type": "MethodDefinition",
            "key": {
              "type": "Identifier",
              "name": "disconnect",
              "range": [
                2261,
                2271
              ],
              "loc": {
                "start": {
                  "line": 56,
                  "column": 2
                },
                "end": {
                  "line": 56,
                  "column": 12
                }
              }
            },
            "value": {
              "type": "FunctionExpression",
              "id": null,
              "params": [
                {
                  "type": "Identifier",
                  "name": "client",
                  "range": [
                    2272,
                    2278
                  ],
                  "loc": {
                    "start": {
                      "line": 56,
                      "column": 13
                    },
                    "end": {
                      "line": 56,
                      "column": 19
                    }
                  }
                }
              ],
              "body": {
                "type": "BlockStatement",
                "body": [],
                "range": [
                  2280,
                  2334
                ],
                "loc": {
                  "start": {
                    "line": 56,
                    "column": 21
                  },
                  "end": {
                    "line": 58,
                    "column": 3
                  }
                },
                "trailingComments": [
                  {
                    "type": "Line",
                    "value": " delete client.modules[this.name] // TODO?",
                    "range": [
                      2286,
                      2330
                    ],
                    "loc": {
                      "start": {
                        "line": 57,
                        "column": 4
                      },
                      "end": {
                        "line": 57,
                        "column": 48
                      }
                    }
                  }
                ]
              },
              "generator": false,
              "expression": false,
              "range": [
                2271,
                2334
              ],
              "loc": {
                "start": {
                  "line": 56,
                  "column": 12
                },
                "end": {
                  "line": 58,
                  "column": 3
                }
              }
            },
            "kind": "method",
            "computed": false,
            "range": [
              2261,
              2334
            ],
            "loc": {
              "start": {
                "line": 56,
                "column": 2
              },
              "end": {
                "line": 58,
                "column": 3
              }
            },
            "leadingComments": [
              {
                "type": "Block",
                "value": "*\n   * Called when the client `client` disconnects from the server.\n   * This method should handle the logic when that happens. For instance, it can remove the socket message listeners, or remove the client from the list that keeps track of the connected clients.\n   * @param {ServerClient} client The disconnected client.\n   ",
                "range": [
                  1928,
                  2258
                ],
                "loc": {
                  "start": {
                    "line": 51,
                    "column": 2
                  },
                  "end": {
                    "line": 55,
                    "column": 5
                  }
                }
              }
            ],
            "static": false
          }
        ],
        "range": [
          1047,
          2336
        ],
        "loc": {
          "start": {
            "line": 24,
            "column": 40
          },
          "end": {
            "line": 59,
            "column": 1
          }
        }
      },
      "range": [
        1007,
        2336
      ],
      "loc": {
        "start": {
          "line": 24,
          "column": 0
        },
        "end": {
          "line": 59,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Line",
          "value": " TODO: remove EventEmitter? (Implement our own listeners)",
          "range": [
            68,
            127
          ],
          "loc": {
            "start": {
              "line": 3,
              "column": 53
            },
            "end": {
              "line": 3,
              "column": 112
            }
          }
        },
        {
          "type": "Block",
          "value": "*\n * The {@link ServerModule} base class is used to create a *Soundworks* module on the server side.\n * Each module should have a {@link ServerModule#connect} and a {@link ServerModule#disconnect} method.\n * Any module mapped to the type of client `clientType` (thanks to the {@link server#map} method) would call its {@link ServerModule#connect} method when such a client connects to the server, and its {@link ServerModule#disconnect} method when such a client disconnects from the server.\n * @example\n * class MyModule extends serverSide.Module {\n *   constructor('my-module-name') {\n *     ... // anything the constructor needs\n *   }\n *\n *   connect(client) {\n *     ... // what the module has to do when a client connects to the server\n *   }\n *\n *   disconnect(client) {\n *     ... // what the module has to do when a client disconnects from the server\n *   }\n * }\n ",
          "range": [
            129,
            1006
          ],
          "loc": {
            "start": {
              "line": 5,
              "column": 0
            },
            "end": {
              "line": 23,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "module",
            "range": [
              2338,
              2344
            ],
            "loc": {
              "start": {
                "line": 61,
                "column": 0
              },
              "end": {
                "line": 61,
                "column": 6
              }
            }
          },
          "property": {
            "type": "Identifier",
            "name": "exports",
            "range": [
              2345,
              2352
            ],
            "loc": {
              "start": {
                "line": 61,
                "column": 7
              },
              "end": {
                "line": 61,
                "column": 14
              }
            }
          },
          "range": [
            2338,
            2352
          ],
          "loc": {
            "start": {
              "line": 61,
              "column": 0
            },
            "end": {
              "line": 61,
              "column": 14
            }
          }
        },
        "right": {
          "type": "Identifier",
          "name": "ServerModule",
          "range": [
            2355,
            2367
          ],
          "loc": {
            "start": {
              "line": 61,
              "column": 17
            },
            "end": {
              "line": 61,
              "column": 29
            }
          }
        },
        "range": [
          2338,
          2367
        ],
        "loc": {
          "start": {
            "line": 61,
            "column": 0
          },
          "end": {
            "line": 61,
            "column": 29
          }
        }
      },
      "range": [
        2338,
        2368
      ],
      "loc": {
        "start": {
          "line": 61,
          "column": 0
        },
        "end": {
          "line": 61,
          "column": 30
        }
      },
      "leadingComments": [
        {
          "type": "Line",
          "value": " delete client.modules[this.name] // TODO?",
          "range": [
            2286,
            2330
          ],
          "loc": {
            "start": {
              "line": 57,
              "column": 4
            },
            "end": {
              "line": 57,
              "column": 48
            }
          }
        }
      ]
    }
  ],
  "sourceType": "module",
  "range": [
    0,
    2368
  ],
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 61,
      "column": 30
    }
  },
  "comments": [
    {
      "type": "Line",
      "value": " TODO: remove EventEmitter? (Implement our own listeners)",
      "range": [
        68,
        127
      ],
      "loc": {
        "start": {
          "line": 3,
          "column": 53
        },
        "end": {
          "line": 3,
          "column": 112
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * The {@link ServerModule} base class is used to create a *Soundworks* module on the server side.\n * Each module should have a {@link ServerModule#connect} and a {@link ServerModule#disconnect} method.\n * Any module mapped to the type of client `clientType` (thanks to the {@link server#map} method) would call its {@link ServerModule#connect} method when such a client connects to the server, and its {@link ServerModule#disconnect} method when such a client disconnects from the server.\n * @example\n * class MyModule extends serverSide.Module {\n *   constructor('my-module-name') {\n *     ... // anything the constructor needs\n *   }\n *\n *   connect(client) {\n *     ... // what the module has to do when a client connects to the server\n *   }\n *\n *   disconnect(client) {\n *     ... // what the module has to do when a client disconnects from the server\n *   }\n * }\n ",
      "range": [
        129,
        1006
      ],
      "loc": {
        "start": {
          "line": 5,
          "column": 0
        },
        "end": {
          "line": 23,
          "column": 3
        }
      }
    },
    {
      "type": "Line",
      "value": " export default class ServerModule extends EventEmitter {",
      "range": [
        1049,
        1108
      ],
      "loc": {
        "start": {
          "line": 25,
          "column": 0
        },
        "end": {
          "line": 25,
          "column": 59
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n    * Creates an instance of the class.\n    * @param {Object} [options={}] The options.\n    * @param {string} [options.name='unnamed'] The name of the module.\n   ",
      "range": [
        1111,
        1279
      ],
      "loc": {
        "start": {
          "line": 26,
          "column": 2
        },
        "end": {
          "line": 30,
          "column": 5
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n     * The name of the module.\n     * @type {string}\n     ",
      "range": [
        1320,
        1384
      ],
      "loc": {
        "start": {
          "line": 34,
          "column": 4
        },
        "end": {
          "line": 37,
          "column": 7
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n   * Called when the `client` connects to the server.\n   * This method should handle the logic of the module on the server side. For instance, it can take care of the communication with the client side module by setting up WebSocket message listeners and sending WebSocket messages, or it can add the client to a list to keep track of all the connected clients.\n   * @param {ServerClient} client The connected client.\n   ",
      "range": [
        1414,
        1841
      ],
      "loc": {
        "start": {
          "line": 41,
          "column": 2
        },
        "end": {
          "line": 45,
          "column": 5
        }
      }
    },
    {
      "type": "Line",
      "value": " Setup an object",
      "range": [
        1866,
        1884
      ],
      "loc": {
        "start": {
          "line": 47,
          "column": 4
        },
        "end": {
          "line": 47,
          "column": 22
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n   * Called when the client `client` disconnects from the server.\n   * This method should handle the logic when that happens. For instance, it can remove the socket message listeners, or remove the client from the list that keeps track of the connected clients.\n   * @param {ServerClient} client The disconnected client.\n   ",
      "range": [
        1928,
        2258
      ],
      "loc": {
        "start": {
          "line": 51,
          "column": 2
        },
        "end": {
          "line": 55,
          "column": 5
        }
      }
    },
    {
      "type": "Line",
      "value": " delete client.modules[this.name] // TODO?",
      "range": [
        2286,
        2330
      ],
      "loc": {
        "start": {
          "line": 57,
          "column": 4
        },
        "end": {
          "line": 57,
          "column": 48
        }
      }
    }
  ]
}