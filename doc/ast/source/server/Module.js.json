{
  "type": "Program",
  "body": [
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "EventEmitter",
            "range": [
              71,
              83
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 9
              },
              "end": {
                "line": 2,
                "column": 21
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "EventEmitter",
            "range": [
              71,
              83
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 9
              },
              "end": {
                "line": 2,
                "column": 21
              }
            }
          },
          "range": [
            71,
            83
          ],
          "loc": {
            "start": {
              "line": 2,
              "column": 9
            },
            "end": {
              "line": 2,
              "column": 21
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "events",
        "raw": "'events'",
        "range": [
          91,
          99
        ],
        "loc": {
          "start": {
            "line": 2,
            "column": 29
          },
          "end": {
            "line": 2,
            "column": 37
          }
        }
      },
      "range": [
        62,
        100
      ],
      "loc": {
        "start": {
          "line": 2,
          "column": 0
        },
        "end": {
          "line": 2,
          "column": 38
        }
      },
      "leadingComments": [
        {
          "type": "Line",
          "value": " @todo - remove EventEmitter? (Implement our own listeners)",
          "range": [
            0,
            61
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 1,
              "column": 61
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * [server] Base class used to create any *Soundworks* module on the server side.\n *\n * While the sequence of user interactions and exchanges between client and server is determined on the client side, the server side modules are ready to receive requests from the corresponding client side modules as soon as a client is connected to the server.\n *\n * Each module should have a {@link Module#connect} and a {@link Module#disconnect} methods.\n * Any module mapped to the type of client `'clientType'` (thanks to the {@link server#map} method) calls its {@link Module#connect} method when such a client connects to the server, and its {@link Module#disconnect} method when such a client disconnects from the server.\n *\n * (See also {@link src/client/Module.js~Module} on the client side.)\n *\n * **Note:** a more complete example of how to write a module is in the [Example](manual/example.html) section.\n *\n * @example\n * class MyModule extends Module {\n *   constructor(name) {\n *     super(name);\n *\n *     // ...\n *   }\n *\n *   connect(client) {\n *     super.connect(client);\n *\n *     // ...\n *   }\n *\n *   disconnect(client) {\n *     super.disconnect(client);\n *\n *     // ...\n *   }\n * }\n ",
          "range": [
            103,
            1303
          ],
          "loc": {
            "start": {
              "line": 5,
              "column": 0
            },
            "end": {
              "line": 37,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportDefaultDeclaration",
      "declaration": {
        "type": "ClassDeclaration",
        "id": {
          "type": "Identifier",
          "name": "Module",
          "range": [
            1325,
            1331
          ],
          "loc": {
            "start": {
              "line": 38,
              "column": 21
            },
            "end": {
              "line": 38,
              "column": 27
            }
          }
        },
        "superClass": {
          "type": "Identifier",
          "name": "EventEmitter",
          "range": [
            1340,
            1352
          ],
          "loc": {
            "start": {
              "line": 38,
              "column": 36
            },
            "end": {
              "line": 38,
              "column": 48
            }
          }
        },
        "body": {
          "type": "ClassBody",
          "body": [
            {
              "type": "MethodDefinition",
              "key": {
                "type": "Identifier",
                "name": "constructor",
                "range": [
                  1528,
                  1539
                ],
                "loc": {
                  "start": {
                    "line": 44,
                    "column": 2
                  },
                  "end": {
                    "line": 44,
                    "column": 13
                  }
                }
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "name",
                    "range": [
                      1540,
                      1544
                    ],
                    "loc": {
                      "start": {
                        "line": 44,
                        "column": 14
                      },
                      "end": {
                        "line": 44,
                        "column": 18
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Super",
                          "range": [
                            1552,
                            1557
                          ],
                          "loc": {
                            "start": {
                              "line": 45,
                              "column": 4
                            },
                            "end": {
                              "line": 45,
                              "column": 9
                            }
                          }
                        },
                        "arguments": [],
                        "range": [
                          1552,
                          1559
                        ],
                        "loc": {
                          "start": {
                            "line": 45,
                            "column": 4
                          },
                          "end": {
                            "line": 45,
                            "column": 11
                          }
                        }
                      },
                      "range": [
                        1552,
                        1560
                      ],
                      "loc": {
                        "start": {
                          "line": 45,
                          "column": 4
                        },
                        "end": {
                          "line": 45,
                          "column": 12
                        }
                      },
                      "trailingComments": [
                        {
                          "type": "Block",
                          "value": "*\n     * The name of the module.\n     * @type {string}\n     ",
                          "range": [
                            1565,
                            1629
                          ],
                          "loc": {
                            "start": {
                              "line": 46,
                              "column": 4
                            },
                            "end": {
                              "line": 49,
                              "column": 7
                            }
                          }
                        }
                      ]
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "ThisExpression",
                            "range": [
                              1634,
                              1638
                            ],
                            "loc": {
                              "start": {
                                "line": 50,
                                "column": 4
                              },
                              "end": {
                                "line": 50,
                                "column": 8
                              }
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "name",
                            "range": [
                              1639,
                              1643
                            ],
                            "loc": {
                              "start": {
                                "line": 50,
                                "column": 9
                              },
                              "end": {
                                "line": 50,
                                "column": 13
                              }
                            }
                          },
                          "range": [
                            1634,
                            1643
                          ],
                          "loc": {
                            "start": {
                              "line": 50,
                              "column": 4
                            },
                            "end": {
                              "line": 50,
                              "column": 13
                            }
                          }
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "name",
                          "range": [
                            1646,
                            1650
                          ],
                          "loc": {
                            "start": {
                              "line": 50,
                              "column": 16
                            },
                            "end": {
                              "line": 50,
                              "column": 20
                            }
                          }
                        },
                        "range": [
                          1634,
                          1650
                        ],
                        "loc": {
                          "start": {
                            "line": 50,
                            "column": 4
                          },
                          "end": {
                            "line": 50,
                            "column": 20
                          }
                        }
                      },
                      "range": [
                        1634,
                        1651
                      ],
                      "loc": {
                        "start": {
                          "line": 50,
                          "column": 4
                        },
                        "end": {
                          "line": 50,
                          "column": 21
                        }
                      },
                      "leadingComments": [
                        {
                          "type": "Block",
                          "value": "*\n     * The name of the module.\n     * @type {string}\n     ",
                          "range": [
                            1565,
                            1629
                          ],
                          "loc": {
                            "start": {
                              "line": 46,
                              "column": 4
                            },
                            "end": {
                              "line": 49,
                              "column": 7
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "range": [
                    1546,
                    1655
                  ],
                  "loc": {
                    "start": {
                      "line": 44,
                      "column": 20
                    },
                    "end": {
                      "line": 51,
                      "column": 3
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  1539,
                  1655
                ],
                "loc": {
                  "start": {
                    "line": 44,
                    "column": 13
                  },
                  "end": {
                    "line": 51,
                    "column": 3
                  }
                }
              },
              "kind": "constructor",
              "computed": false,
              "range": [
                1528,
                1655
              ],
              "loc": {
                "start": {
                  "line": 44,
                  "column": 2
                },
                "end": {
                  "line": 51,
                  "column": 3
                }
              },
              "leadingComments": [
                {
                  "type": "Block",
                  "value": "*\n    * Creates an instance of the class.\n    * @param {Object} [options={}] The options.\n    * @param {string} [options.name='unnamed'] The name of the module.\n   ",
                  "range": [
                    1357,
                    1525
                  ],
                  "loc": {
                    "start": {
                      "line": 39,
                      "column": 2
                    },
                    "end": {
                      "line": 43,
                      "column": 5
                    }
                  }
                }
              ],
              "trailingComments": [
                {
                  "type": "Block",
                  "value": "*\n   * Called when the `client` connects to the server.\n   *\n   * This method should handle the logic of the module on the server side.\n   * For instance, it can take care of the communication with the client side module by setting up WebSocket message listeners and sending WebSocket messages, or it can add the client to a list to keep track of all the connected clients.\n   * @param {Client} client Connected client.\n   ",
                  "range": [
                    1659,
                    2086
                  ],
                  "loc": {
                    "start": {
                      "line": 53,
                      "column": 2
                    },
                    "end": {
                      "line": 59,
                      "column": 5
                    }
                  }
                }
              ],
              "static": false
            },
            {
              "type": "MethodDefinition",
              "key": {
                "type": "Identifier",
                "name": "connect",
                "range": [
                  2089,
                  2096
                ],
                "loc": {
                  "start": {
                    "line": 60,
                    "column": 2
                  },
                  "end": {
                    "line": 60,
                    "column": 9
                  }
                }
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "client",
                    "range": [
                      2097,
                      2103
                    ],
                    "loc": {
                      "start": {
                        "line": 60,
                        "column": 10
                      },
                      "end": {
                        "line": 60,
                        "column": 16
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "computed": true,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "client",
                              "range": [
                                2134,
                                2140
                              ],
                              "loc": {
                                "start": {
                                  "line": 62,
                                  "column": 4
                                },
                                "end": {
                                  "line": 62,
                                  "column": 10
                                }
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "modules",
                              "range": [
                                2141,
                                2148
                              ],
                              "loc": {
                                "start": {
                                  "line": 62,
                                  "column": 11
                                },
                                "end": {
                                  "line": 62,
                                  "column": 18
                                }
                              }
                            },
                            "range": [
                              2134,
                              2148
                            ],
                            "loc": {
                              "start": {
                                "line": 62,
                                "column": 4
                              },
                              "end": {
                                "line": 62,
                                "column": 18
                              }
                            }
                          },
                          "property": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "ThisExpression",
                              "range": [
                                2149,
                                2153
                              ],
                              "loc": {
                                "start": {
                                  "line": 62,
                                  "column": 19
                                },
                                "end": {
                                  "line": 62,
                                  "column": 23
                                }
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "name",
                              "range": [
                                2154,
                                2158
                              ],
                              "loc": {
                                "start": {
                                  "line": 62,
                                  "column": 24
                                },
                                "end": {
                                  "line": 62,
                                  "column": 28
                                }
                              }
                            },
                            "range": [
                              2149,
                              2158
                            ],
                            "loc": {
                              "start": {
                                "line": 62,
                                "column": 19
                              },
                              "end": {
                                "line": 62,
                                "column": 28
                              }
                            }
                          },
                          "range": [
                            2134,
                            2159
                          ],
                          "loc": {
                            "start": {
                              "line": 62,
                              "column": 4
                            },
                            "end": {
                              "line": 62,
                              "column": 29
                            }
                          }
                        },
                        "right": {
                          "type": "ObjectExpression",
                          "properties": [],
                          "range": [
                            2162,
                            2164
                          ],
                          "loc": {
                            "start": {
                              "line": 62,
                              "column": 32
                            },
                            "end": {
                              "line": 62,
                              "column": 34
                            }
                          }
                        },
                        "range": [
                          2134,
                          2164
                        ],
                        "loc": {
                          "start": {
                            "line": 62,
                            "column": 4
                          },
                          "end": {
                            "line": 62,
                            "column": 34
                          }
                        }
                      },
                      "range": [
                        2134,
                        2165
                      ],
                      "loc": {
                        "start": {
                          "line": 62,
                          "column": 4
                        },
                        "end": {
                          "line": 62,
                          "column": 35
                        }
                      },
                      "leadingComments": [
                        {
                          "type": "Line",
                          "value": " Setup an object",
                          "range": [
                            2111,
                            2129
                          ],
                          "loc": {
                            "start": {
                              "line": 61,
                              "column": 4
                            },
                            "end": {
                              "line": 61,
                              "column": 22
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "range": [
                    2105,
                    2169
                  ],
                  "loc": {
                    "start": {
                      "line": 60,
                      "column": 18
                    },
                    "end": {
                      "line": 63,
                      "column": 3
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  2096,
                  2169
                ],
                "loc": {
                  "start": {
                    "line": 60,
                    "column": 9
                  },
                  "end": {
                    "line": 63,
                    "column": 3
                  }
                }
              },
              "kind": "method",
              "computed": false,
              "range": [
                2089,
                2169
              ],
              "loc": {
                "start": {
                  "line": 60,
                  "column": 2
                },
                "end": {
                  "line": 63,
                  "column": 3
                }
              },
              "leadingComments": [
                {
                  "type": "Block",
                  "value": "*\n   * Called when the `client` connects to the server.\n   *\n   * This method should handle the logic of the module on the server side.\n   * For instance, it can take care of the communication with the client side module by setting up WebSocket message listeners and sending WebSocket messages, or it can add the client to a list to keep track of all the connected clients.\n   * @param {Client} client Connected client.\n   ",
                  "range": [
                    1659,
                    2086
                  ],
                  "loc": {
                    "start": {
                      "line": 53,
                      "column": 2
                    },
                    "end": {
                      "line": 59,
                      "column": 5
                    }
                  }
                }
              ],
              "trailingComments": [
                {
                  "type": "Block",
                  "value": "*\n   * Called when the client `client` disconnects from the server.\n   *\n   * This method should handle the logic when that happens.\n   * For instance, it can remove the socket message listeners, or remove the client from the list that keeps track of the connected clients.\n   * @param {Client} client Disconnected client.\n   ",
                  "range": [
                    2173,
                    2503
                  ],
                  "loc": {
                    "start": {
                      "line": 65,
                      "column": 2
                    },
                    "end": {
                      "line": 71,
                      "column": 5
                    }
                  }
                }
              ],
              "static": false
            },
            {
              "type": "MethodDefinition",
              "key": {
                "type": "Identifier",
                "name": "disconnect",
                "range": [
                  2506,
                  2516
                ],
                "loc": {
                  "start": {
                    "line": 72,
                    "column": 2
                  },
                  "end": {
                    "line": 72,
                    "column": 12
                  }
                }
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "client",
                    "range": [
                      2517,
                      2523
                    ],
                    "loc": {
                      "start": {
                        "line": 72,
                        "column": 13
                      },
                      "end": {
                        "line": 72,
                        "column": 19
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [],
                  "range": [
                    2525,
                    2579
                  ],
                  "loc": {
                    "start": {
                      "line": 72,
                      "column": 21
                    },
                    "end": {
                      "line": 74,
                      "column": 3
                    }
                  },
                  "trailingComments": [
                    {
                      "type": "Line",
                      "value": " delete client.modules[this.name] // TODO?",
                      "range": [
                        2531,
                        2575
                      ],
                      "loc": {
                        "start": {
                          "line": 73,
                          "column": 4
                        },
                        "end": {
                          "line": 73,
                          "column": 48
                        }
                      }
                    }
                  ]
                },
                "generator": false,
                "expression": false,
                "range": [
                  2516,
                  2579
                ],
                "loc": {
                  "start": {
                    "line": 72,
                    "column": 12
                  },
                  "end": {
                    "line": 74,
                    "column": 3
                  }
                }
              },
              "kind": "method",
              "computed": false,
              "range": [
                2506,
                2579
              ],
              "loc": {
                "start": {
                  "line": 72,
                  "column": 2
                },
                "end": {
                  "line": 74,
                  "column": 3
                }
              },
              "leadingComments": [
                {
                  "type": "Block",
                  "value": "*\n   * Called when the client `client` disconnects from the server.\n   *\n   * This method should handle the logic when that happens.\n   * For instance, it can remove the socket message listeners, or remove the client from the list that keeps track of the connected clients.\n   * @param {Client} client Disconnected client.\n   ",
                  "range": [
                    2173,
                    2503
                  ],
                  "loc": {
                    "start": {
                      "line": 65,
                      "column": 2
                    },
                    "end": {
                      "line": 71,
                      "column": 5
                    }
                  }
                }
              ],
              "static": false
            }
          ],
          "range": [
            1353,
            2581
          ],
          "loc": {
            "start": {
              "line": 38,
              "column": 49
            },
            "end": {
              "line": 75,
              "column": 1
            }
          }
        },
        "range": [
          1319,
          2581
        ],
        "loc": {
          "start": {
            "line": 38,
            "column": 15
          },
          "end": {
            "line": 75,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * [server] Base class used to create any *Soundworks* module on the server side.\n *\n * While the sequence of user interactions and exchanges between client and server is determined on the client side, the server side modules are ready to receive requests from the corresponding client side modules as soon as a client is connected to the server.\n *\n * Each module should have a {@link Module#connect} and a {@link Module#disconnect} methods.\n * Any module mapped to the type of client `'clientType'` (thanks to the {@link server#map} method) calls its {@link Module#connect} method when such a client connects to the server, and its {@link Module#disconnect} method when such a client disconnects from the server.\n *\n * (See also {@link src/client/Module.js~Module} on the client side.)\n *\n * **Note:** a more complete example of how to write a module is in the [Example](manual/example.html) section.\n *\n * @example\n * class MyModule extends Module {\n *   constructor(name) {\n *     super(name);\n *\n *     // ...\n *   }\n *\n *   connect(client) {\n *     super.connect(client);\n *\n *     // ...\n *   }\n *\n *   disconnect(client) {\n *     super.disconnect(client);\n *\n *     // ...\n *   }\n * }\n ",
            "range": [
              103,
              1303
            ],
            "loc": {
              "start": {
                "line": 5,
                "column": 0
              },
              "end": {
                "line": 37,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": []
      },
      "range": [
        1304,
        2581
      ],
      "loc": {
        "start": {
          "line": 38,
          "column": 0
        },
        "end": {
          "line": 75,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * [server] Base class used to create any *Soundworks* module on the server side.\n *\n * While the sequence of user interactions and exchanges between client and server is determined on the client side, the server side modules are ready to receive requests from the corresponding client side modules as soon as a client is connected to the server.\n *\n * Each module should have a {@link Module#connect} and a {@link Module#disconnect} methods.\n * Any module mapped to the type of client `'clientType'` (thanks to the {@link server#map} method) calls its {@link Module#connect} method when such a client connects to the server, and its {@link Module#disconnect} method when such a client disconnects from the server.\n *\n * (See also {@link src/client/Module.js~Module} on the client side.)\n *\n * **Note:** a more complete example of how to write a module is in the [Example](manual/example.html) section.\n *\n * @example\n * class MyModule extends Module {\n *   constructor(name) {\n *     super(name);\n *\n *     // ...\n *   }\n *\n *   connect(client) {\n *     super.connect(client);\n *\n *     // ...\n *   }\n *\n *   disconnect(client) {\n *     super.disconnect(client);\n *\n *     // ...\n *   }\n * }\n ",
          "range": [
            103,
            1303
          ],
          "loc": {
            "start": {
              "line": 5,
              "column": 0
            },
            "end": {
              "line": 37,
              "column": 3
            }
          }
        }
      ]
    }
  ],
  "sourceType": "module",
  "range": [
    62,
    2581
  ],
  "loc": {
    "start": {
      "line": 2,
      "column": 0
    },
    "end": {
      "line": 75,
      "column": 1
    }
  },
  "comments": [
    {
      "type": "Line",
      "value": " @todo - remove EventEmitter? (Implement our own listeners)",
      "range": [
        0,
        61
      ],
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 61
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * [server] Base class used to create any *Soundworks* module on the server side.\n *\n * While the sequence of user interactions and exchanges between client and server is determined on the client side, the server side modules are ready to receive requests from the corresponding client side modules as soon as a client is connected to the server.\n *\n * Each module should have a {@link Module#connect} and a {@link Module#disconnect} methods.\n * Any module mapped to the type of client `'clientType'` (thanks to the {@link server#map} method) calls its {@link Module#connect} method when such a client connects to the server, and its {@link Module#disconnect} method when such a client disconnects from the server.\n *\n * (See also {@link src/client/Module.js~Module} on the client side.)\n *\n * **Note:** a more complete example of how to write a module is in the [Example](manual/example.html) section.\n *\n * @example\n * class MyModule extends Module {\n *   constructor(name) {\n *     super(name);\n *\n *     // ...\n *   }\n *\n *   connect(client) {\n *     super.connect(client);\n *\n *     // ...\n *   }\n *\n *   disconnect(client) {\n *     super.disconnect(client);\n *\n *     // ...\n *   }\n * }\n ",
      "range": [
        103,
        1303
      ],
      "loc": {
        "start": {
          "line": 5,
          "column": 0
        },
        "end": {
          "line": 37,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n    * Creates an instance of the class.\n    * @param {Object} [options={}] The options.\n    * @param {string} [options.name='unnamed'] The name of the module.\n   ",
      "range": [
        1357,
        1525
      ],
      "loc": {
        "start": {
          "line": 39,
          "column": 2
        },
        "end": {
          "line": 43,
          "column": 5
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n     * The name of the module.\n     * @type {string}\n     ",
      "range": [
        1565,
        1629
      ],
      "loc": {
        "start": {
          "line": 46,
          "column": 4
        },
        "end": {
          "line": 49,
          "column": 7
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n   * Called when the `client` connects to the server.\n   *\n   * This method should handle the logic of the module on the server side.\n   * For instance, it can take care of the communication with the client side module by setting up WebSocket message listeners and sending WebSocket messages, or it can add the client to a list to keep track of all the connected clients.\n   * @param {Client} client Connected client.\n   ",
      "range": [
        1659,
        2086
      ],
      "loc": {
        "start": {
          "line": 53,
          "column": 2
        },
        "end": {
          "line": 59,
          "column": 5
        }
      }
    },
    {
      "type": "Line",
      "value": " Setup an object",
      "range": [
        2111,
        2129
      ],
      "loc": {
        "start": {
          "line": 61,
          "column": 4
        },
        "end": {
          "line": 61,
          "column": 22
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n   * Called when the client `client` disconnects from the server.\n   *\n   * This method should handle the logic when that happens.\n   * For instance, it can remove the socket message listeners, or remove the client from the list that keeps track of the connected clients.\n   * @param {Client} client Disconnected client.\n   ",
      "range": [
        2173,
        2503
      ],
      "loc": {
        "start": {
          "line": 65,
          "column": 2
        },
        "end": {
          "line": 71,
          "column": 5
        }
      }
    },
    {
      "type": "Line",
      "value": " delete client.modules[this.name] // TODO?",
      "range": [
        2531,
        2575
      ],
      "loc": {
        "start": {
          "line": 73,
          "column": 4
        },
        "end": {
          "line": 73,
          "column": 48
        }
      }
    }
  ]
}